[package]
name = "rusty-hermit"
version = "0.3.11"
authors = [
	"Stefan Lankes <slankes@eonerc.rwth-aachen.de>",
	"Colin Finck <colin.finck@rwth-aachen.de>"
]
build = "build.rs"
license = "MIT/Apache-2.0"
readme = "README.md"
keywords = ["unikernel", "libos"]
categories = ["os"]
description = """
RustyHermit - A Rust-based, lightweight unikernel
"""
exclude = ["/img/*", "/loader/*", "/tests/*", "./Makefile", "./CMakeLists.txt", "/.travis.yml", "/.gitlab-ci.yml", ".gitignore", "/.devcontainer/*", "/.vscode/*"]

[badges]
travis-ci = { repository = "hermitcore/libhermit-rs" }

[lib]
crate-type = ["staticlib", "rlib"]
name = "hermit"

[features]
vga = []
newlib = []
rustc-dep-of-std = ['core', 'compiler_builtins/rustc-dep-of-std', 'compiler_builtins/mem', 'x86/rustc-dep-of-std', 'log/rustc-dep-of-std', 'bitflags/rustc-dep-of-std', 'multiboot/rustc-dep-of-std']

[target.'cfg(target_arch = "x86_64")']
rustflags = ["-C", "target-features", "-mmx,-sse,-sse2,-sse3,-ssse3,-sse4.1,-sse4.2,-3dnow,-3dnowa,-avx,-avx2,+soft-float"]

[dependencies]
core = { version = '1.0.0', optional = true, package = 'rustc-std-workspace-core' }
alloc = { version = '1.0.0', package = 'rustc-std-workspace-alloc' }
compiler_builtins = { version = '0.1.10', optional = true }
bitflags = { git = "https://github.com/hermitcore/bitflags.git", branch = "hermit" }

[dependencies.log]
git = "https://github.com/hermitcore/log.git"
branch = "hermit"
#version = "0.4"
default-features = false
#features = ["release_max_level_info"]

[target.'cfg(target_arch = "x86_64")'.dependencies.multiboot]
git = "https://github.com/hermitcore/rust-multiboot.git"
branch = "hermit"

[target.'cfg(target_arch = "x86_64")'.dependencies.x86]
#version = "0.*"
git = "https://github.com/hermitcore/rust-x86.git"
branch = "hermit"
default-features = false

[package.metadata.cargo-xbuild]
memcpy = true

# The development profile, used for `cargo build`.
[profile.dev]
opt-level = 1      # controls the `--opt-level` the compiler builds with
debug = true       # controls whether the compiler passes `-C debuginfo`
                   # a value of `true` is equivalent to `2`
rpath = false      # controls whether the compiler passes `-C rpath`
lto = false         # controls `-C lto` for binaries and staticlibs
debug-assertions = true # controls whether debug assertions are enabled
panic = "abort" # Call abort on panic https://github.com/rust-lang/rust/pull/32900

# The release profile, used for `cargo build --release`.
[profile.release]
opt-level = 3
debug = false
rpath = false
lto = true
debug-assertions = false
panic = "abort"
